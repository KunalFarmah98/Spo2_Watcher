package com.apps.kunalfarmah.Spo2Watcher.utils;

class DecisionTreeClassifier {

    private int[] lChilds;
    private int[] rChilds;
    private double[] thresholds;
    private int[] indices;
    private int[][] classes;
    public static int estimation;
    public DecisionTreeClassifier(int[] lChilds, int[] rChilds, double[] thresholds, int[] indices, int[][] classes) {
        this.lChilds = lChilds;
        this.rChilds = rChilds;
        this.thresholds = thresholds;
        this.indices = indices;
        this.classes = classes;
    }

    public int predict(double[] features) {
        return this.predict(features, 0);
    }

    public int predict(double[] features, int node) {
        if (this.thresholds[node] != -2) {
            if (features[this.indices[node]] <= this.thresholds[node]) {
                return predict(features, this.lChilds[node]);
            } else {
                return predict(features, this.rChilds[node]);
            }
        }
        return findMax(this.classes[node]);
    }

    private int findMax(int[] nums) {
        int index = 0;
        for (int i = 0; i < nums.length; i++) {
            index = nums[i] > nums[index] ? i : index;
        }
        return index;
    }

    public static void main(String[] args) {
        if (args.length == 3) {

            // Features:
            double[] features = new double[args.length];
            for (int i = 0, l = args.length; i < l; i++) {
                features[i] = Double.parseDouble(args[i]);
            }

            // Parameters:
            int[] lChilds = {1, 2, 3, 4, 5, -1, -1, 8, 9, -1, 11, 12, 13, -1, 15, -1, -1, -1, 19, 20, 21, 22, 23, -1, -1, -1, 27, -1, -1, -1, 31, -1, -1, 34, 35, 36, 37, 38, 39, 40, -1, -1, -1, -1, -1, -1, -1, -1, 49, -1, -1, 52, 53, 54, -1, 56, 57, 58, 59, -1, 61, -1, 63, -1, -1, -1, 67, -1, 69, 70, 71, 72, 73, -1, 75, 76, 77, -1, -1, -1, 81, 82, -1, 84, 85, -1, -1, -1, -1, 90, -1, 92, 93, -1, -1, 96, 97, -1, 99, 100, -1, 102, -1, 104, -1, -1, 107, -1, 109, 110, -1, -1, -1, -1, 115, -1, 117, -1, -1, -1, -1, 122, 123, -1, -1, 126, 127, 128, -1, 130, 131, -1, -1, -1, 135, 136, -1, -1, -1, 140, -1, 142, 143, 144, 145, -1, -1, 148, -1, 150, 151, 152, -1, 154, 155, -1, 157, -1, -1, 160, -1, -1, 163, -1, -1, -1, 167, 168, -1, 170, 171, -1, 173, -1, 175, -1, -1, 178, -1, 180, 181, -1, -1, 184, -1, -1, -1, 188, -1, 190, 191, 192, 193, 194, -1, -1, -1, -1, 199, -1, -1, 202, -1, 204, 205, -1, -1, -1, 209, 210, 211, 212, -1, 214, -1, 216, 217, -1, -1, -1, 221, 222, 223, 224, -1, -1, -1, 228, -1, 230, 231, -1, -1, -1, 235, 236, 237, 238, 239, -1, 241, 242, 243, -1, 245, -1, -1, 248, 249, -1, -1, -1, 253, 254, -1, 256, -1, 258, -1, 260, -1, -1, 263, -1, -1, -1, -1, -1, 269, -1, 271, 272, -1, 274, -1, -1, -1, -1, 279, 280, 281, 282, 283, 284, 285, -1, -1, -1, -1, 290, 291, 292, -1, 294, -1, 296, -1, -1, -1, 300, -1, -1, 303, 304, 305, 306, 307, -1, -1, 310, 311, -1, -1, 314, -1, -1, -1, -1, 319, -1, -1, 322, 323, 324, 325, -1, -1, -1, -1, 330, -1, 332, -1, -1, 335, 336, 337, -1, -1, 340, -1, 342, 343, 344, 345, -1, -1, -1, -1, -1, 351, 352, -1, 354, 355, 356, 357, -1, 359, -1, -1, -1, -1, 364, -1, 366, 367, -1, -1, -1, 371, 372, 373, -1, 375, -1, -1, -1, -1, 380, 381, 382, 383, 384, -1, 386, -1, 388, 389, -1, -1, 392, -1, 394, 395, 396, -1, -1, -1, -1, 401, -1, -1, -1, 405, -1, -1, -1, 409, 410, 411, 412, 413, 414, -1, 416, 417, -1, -1, -1, 421, 422, -1, 424, -1, -1, -1, -1, 429, 430, 431, 432, 433, -1, -1, -1, -1, 438, -1, 440, -1, -1, 443, 444, -1, -1, -1, 448, 449, 450, -1, 452, 453, -1, -1, 456, 457, -1, 459, 460, -1, -1, -1, 464, -1, 466, -1, 468, -1, -1, 471, 472, -1, -1, 475, -1, -1, 478, -1, 480, 481, -1, 483, -1, 485, -1, -1, -1, 489, 490, 491, -1, 493, -1, 495, -1, 497, 498, 499, 500, 501, 502, 503, -1, -1, 506, -1, -1, -1, -1, -1, -1, -1, 514, -1, 516, 517, 518, -1, 520, -1, -1, 523, 524, -1, -1, -1, 528, 529, 530, -1, -1, -1, 534, -1, -1, 537, 538, 539, 540, -1, 542, -1, 544, -1, -1, -1, 548, 549, -1, 551, 552, -1, -1, 555, -1, -1, -1, 559, 560, -1, 562, -1, 564, -1, -1, -1};
            int[] rChilds = {408, 51, 48, 7, 6, -1, -1, 33, 10, -1, 18, 17, 14, -1, 16, -1, -1, -1, 30, 29, 26, 25, 24, -1, -1, -1, 28, -1, -1, -1, 32, -1, -1, 47, 46, 45, 44, 43, 42, 41, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, 379, 208, 55, -1, 121, 66, 65, 60, -1, 62, -1, 64, -1, -1, -1, 68, -1, 120, 119, 114, 89, 74, -1, 80, 79, 78, -1, -1, -1, 88, 83, -1, 87, 86, -1, -1, -1, -1, 91, -1, 95, 94, -1, -1, 113, 98, -1, 106, 101, -1, 103, -1, 105, -1, -1, 108, -1, 112, 111, -1, -1, -1, -1, 116, -1, 118, -1, -1, -1, -1, 125, 124, -1, -1, 139, 134, 129, -1, 133, 132, -1, -1, -1, 138, 137, -1, -1, -1, 141, -1, 187, 166, 147, 146, -1, -1, 149, -1, 165, 162, 153, -1, 159, 156, -1, 158, -1, -1, 161, -1, -1, 164, -1, -1, -1, 186, 169, -1, 177, 172, -1, 174, -1, 176, -1, -1, 179, -1, 183, 182, -1, -1, 185, -1, -1, -1, 189, -1, 201, 198, 197, 196, 195, -1, -1, -1, -1, 200, -1, -1, 203, -1, 207, 206, -1, -1, -1, 278, 277, 220, 213, -1, 215, -1, 219, 218, -1, -1, -1, 234, 227, 226, 225, -1, -1, -1, 229, -1, 233, 232, -1, -1, -1, 268, 267, 266, 265, 240, -1, 252, 247, 244, -1, 246, -1, -1, 251, 250, -1, -1, -1, 262, 255, -1, 257, -1, 259, -1, 261, -1, -1, 264, -1, -1, -1, -1, -1, 270, -1, 276, 273, -1, 275, -1, -1, -1, -1, 334, 321, 302, 289, 288, 287, 286, -1, -1, -1, -1, 299, 298, 293, -1, 295, -1, 297, -1, -1, -1, 301, -1, -1, 318, 317, 316, 309, 308, -1, -1, 313, 312, -1, -1, 315, -1, -1, -1, -1, 320, -1, -1, 329, 328, 327, 326, -1, -1, -1, -1, 331, -1, 333, -1, -1, 350, 339, 338, -1, -1, 341, -1, 349, 348, 347, 346, -1, -1, -1, -1, -1, 370, 353, -1, 363, 362, 361, 358, -1, 360, -1, -1, -1, -1, 365, -1, 369, 368, -1, -1, -1, 378, 377, 374, -1, 376, -1, -1, -1, -1, 407, 404, 403, 400, 385, -1, 387, -1, 391, 390, -1, -1, 393, -1, 399, 398, 397, -1, -1, -1, -1, 402, -1, -1, -1, 406, -1, -1, -1, 488, 447, 428, 427, 420, 415, -1, 419, 418, -1, -1, -1, 426, 423, -1, 425, -1, -1, -1, -1, 442, 437, 436, 435, 434, -1, -1, -1, -1, 439, -1, 441, -1, -1, 446, 445, -1, -1, -1, 477, 470, 451, -1, 455, 454, -1, -1, 463, 458, -1, 462, 461, -1, -1, -1, 465, -1, 467, -1, 469, -1, -1, 474, 473, -1, -1, 476, -1, -1, 479, -1, 487, 482, -1, 484, -1, 486, -1, -1, -1, 536, 513, 492, -1, 494, -1, 496, -1, 512, 511, 510, 509, 508, 505, 504, -1, -1, 507, -1, -1, -1, -1, -1, -1, -1, 515, -1, 527, 522, 519, -1, 521, -1, -1, 526, 525, -1, -1, -1, 533, 532, 531, -1, -1, -1, 535, -1, -1, 558, 547, 546, 541, -1, 543, -1, 545, -1, -1, -1, 557, 550, -1, 554, 553, -1, -1, 556, -1, -1, -1, 566, 561, -1, 563, -1, 565, -1, -1, -1};
            double[] thresholds = {-0.29474009573459625, -0.3478260934352875, -0.3636363744735718, -0.7272727191448212, 0.710526317358017, -2.0, -2.0, 0.8684210479259491, 0.5526315867900848, -2.0, -0.37681159377098083, 0.7631579041481018, 0.710526317358017, -2.0, -0.6060605943202972, -2.0, -2.0, -2.0, -0.4848484843969345, -0.5454545319080353, -0.6060605943202972, 0.710526317358017, 0.6315789520740509, -2.0, -2.0, -2.0, 0.7631579041481018, -2.0, -2.0, -2.0, 0.710526317358017, -2.0, -2.0, -0.37681159377098083, -0.45454545319080353, -0.42028985917568207, -0.5454545319080353, 0.9736842215061188, -0.5072463750839233, 0.9210526347160339, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -0.32504312694072723, -2.0, -2.0, -0.32504312694072723, -0.4848484843969345, -0.969696968793869, -2.0, 0.8303491771221161, -0.6060605943202972, -0.2028985470533371, -0.23188405483961105, -2.0, 0.6578947305679321, -2.0, 0.7631579041481018, -2.0, -2.0, -2.0, 0.6578947305679321, -2.0, 0.3478260934352875, 0.17391304671764374, 0.11594202741980553, 0.710526317358017, -0.260869562625885, -2.0, -0.2028985470533371, -0.5454545319080353, -0.23188405483961105, -2.0, -2.0, -2.0, -0.5454545319080353, -0.1304347850382328, -2.0, 0.043478259816765785, -0.05797101370990276, -2.0, -2.0, -2.0, -2.0, -0.28985506296157837, -2.0, -0.260869562625885, -0.5454545319080353, -2.0, -2.0, -0.5454545319080353, -0.17391304671764374, -2.0, -0.08695651963353157, 0.7631579041481018, -2.0, -0.14492753893136978, -2.0, -0.11594202741980553, -2.0, -2.0, 0.0, -2.0, 0.014728216920047998, 0.7631579041481018, -2.0, -2.0, -2.0, -2.0, 0.7631579041481018, -2.0, -0.5454545319080353, -2.0, -2.0, -2.0, -2.0, -0.7878787815570831, 0.00023546302691102028, -2.0, -2.0, -0.6060605943202972, 0.9736842215061188, -0.08695651963353157, -2.0, -0.028985505923628807, -0.6666666567325592, -2.0, -2.0, -2.0, -0.2608695551753044, -0.3188405781984329, -2.0, -2.0, -2.0, -0.28985506296157837, -2.0, -0.028985507786273956, 0.9210526347160339, -0.260869562625885, 0.8684210479259491, -2.0, -2.0, -0.17391304671764374, -2.0, -0.05797101370990276, 0.8684210479259491, -0.14492753893136978, -2.0, -0.5454545319080353, -0.11594202741980553, -2.0, -0.08695651963353157, -2.0, -2.0, -0.10144927352666855, -2.0, -2.0, -0.14492753893136978, -2.0, -2.0, -2.0, -0.07246376760303974, -0.260869562625885, -2.0, -0.18840579688549042, 0.9736842215061188, -2.0, -0.23188405483961105, -2.0, -0.5454545319080353, -2.0, -2.0, -0.14492753893136978, -2.0, -0.11594202741980553, 0.9736842215061188, -2.0, -2.0, 0.9736842215061188, -2.0, -2.0, -2.0, 0.029220970813184977, -2.0, 0.2028985470533371, 0.17391304671764374, 0.8684210479259491, -0.5454545319080353, 0.07246376760303974, -2.0, -2.0, -2.0, -2.0, -0.5454545319080353, -2.0, -2.0, 0.3188405781984329, -2.0, 0.37681159377098083, 0.8684210479259491, -2.0, -2.0, -2.0, 0.8157894909381866, 0.43478260934352875, -0.23188405483961105, -0.3636363744735718, -2.0, 0.6842105090618134, -2.0, -0.260869562625885, -0.30434782803058624, -2.0, -2.0, -2.0, -0.17391304671764374, 0.710526317358017, -0.39393940567970276, -0.2028985470533371, -2.0, -2.0, -2.0, 0.7631579041481018, -2.0, -0.39393940567970276, -0.2028985470533371, -2.0, -2.0, -2.0, 0.14492753893136978, 0.08695651963353157, 0.05797101370990276, -0.3636363744735718, 0.6578947305679321, -2.0, -0.028985507786273956, -0.42424243688583374, -0.11594202741980553, -2.0, -0.07246376760303974, -2.0, -2.0, -0.11594203114509583, 0.7368421256542206, -2.0, -2.0, -2.0, 0.7631579041481018, 0.0, -2.0, -0.42424243688583374, -2.0, 0.710526317358017, -2.0, 0.014728216920047998, -2.0, -2.0, 0.00023546302691102028, -2.0, -2.0, -2.0, -2.0, -2.0, 0.710526317358017, -2.0, -0.42424243688583374, 0.2608695551753044, -2.0, 0.36231882870197296, -2.0, -2.0, -2.0, -2.0, -0.028985507786273956, -0.08695651963353157, -0.2028985470533371, 0.8684210479259491, -0.23188405483961105, -0.28985506296157837, -0.39393940567970276, -2.0, -2.0, -2.0, -2.0, 0.9736842215061188, 0.9210526347160339, -0.30434782803058624, -2.0, -0.42424243688583374, -2.0, -0.24637680500745773, -2.0, -2.0, -2.0, -0.24637680500745773, -2.0, -2.0, 0.9736842215061188, -0.42424243688583374, 0.9210526347160339, -0.14492753893136978, 0.8684210479259491, -2.0, -2.0, 0.8684210479259491, -0.11594202741980553, -2.0, -2.0, -0.11594202741980553, -2.0, -2.0, -2.0, -2.0, -0.3636363744735718, -2.0, -2.0, -0.42424243688583374, 0.9736842215061188, 0.9210526347160339, 0.8684210479259491, -2.0, -2.0, -2.0, -2.0, -0.05797101370990276, -2.0, -0.3636363744735718, -2.0, -2.0, 0.8684210479259491, 0.014728216920047998, -0.3636363744735718, -2.0, -2.0, 0.260869562625885, -2.0, 0.3478260934352875, 0.3188405781984329, 0.28985506296157837, -0.3636363744735718, -2.0, -2.0, -2.0, -2.0, -2.0, -0.3636363744735718, 0.15942028909921646, -2.0, 0.260869562625885, -0.42424243688583374, 0.23188405483961105, 0.9210526347160339, -2.0, 0.2028985470533371, -2.0, -2.0, -2.0, -2.0, 0.42028985917568207, -2.0, -0.42424243688583374, 0.5072463750839233, -2.0, -2.0, -2.0, 0.37681159377098083, 0.3478260934352875, 0.9736842215061188, -2.0, 0.014492753893136978, -2.0, -2.0, -2.0, -2.0, 0.5217391103506088, 0.9210526347160339, 0.08695651963353157, 0.05797101370990276, 0.7631579041481018, -2.0, -0.15942028537392616, -2.0, -0.08695651963353157, 0.8421052694320679, -2.0, -2.0, 0.014728216920047998, -2.0, 0.8684210479259491, 0.8303491771221161, 0.029220970813184977, -2.0, -2.0, -2.0, -2.0, 0.6578947305679321, -2.0, -2.0, -2.0, 0.14492753893136978, -2.0, -2.0, -2.0, -0.12121212482452393, 0.0, 0.7631579041481018, -0.08695651963353157, -0.30434782803058624, -0.4782608598470688, -2.0, -0.3478260934352875, 0.6842105090618134, -2.0, -2.0, -2.0, 0.710526317358017, 0.6052631437778473, -2.0, -0.23188405483961105, -2.0, -2.0, -2.0, -2.0, -0.05797101370990276, 0.9736842215061188, -0.260869562625885, 0.8684210479259491, -0.28985506296157837, -2.0, -2.0, -2.0, -2.0, -0.2753623127937317, -2.0, -0.24242424964904785, -2.0, -2.0, -0.1818181872367859, -0.028985507786273956, -2.0, -2.0, -2.0, 0.9210526347160339, -0.1818181872367859, 0.014728216920047998, -2.0, 0.08695652149617672, 0.8157894611358643, -2.0, -2.0, 0.8684210479259491, 0.2753623127937317, -2.0, 0.3188405781984329, 0.710526317358017, -2.0, -2.0, -2.0, 0.24637680500745773, -2.0, 0.3913043439388275, -2.0, 0.5362318754196167, -2.0, -2.0, 0.2753623127937317, 0.08719198824837804, -2.0, -2.0, 0.3478260934352875, -2.0, -2.0, 0.07246376760303974, -2.0, 0.9736842215061188, 0.14492753893136978, -2.0, 0.2608695700764656, -2.0, 0.3913043439388275, -2.0, -2.0, -2.0, 0.9210526347160339, 0.14492753893136978, 0.8157894909381866, -2.0, -0.4202898442745209, -2.0, -0.11594202741980553, -2.0, 0.08695651963353157, 0.6666666567325592, 0.24242424964904785, 0.05797101370990276, 0.06060606148093939, -0.030303032137453556, -0.028985505923628807, -2.0, -2.0, -0.028985505923628807, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.2028985470533371, -2.0, 0.8157894909381866, 0.30434782803058624, 0.24242424964904785, -2.0, 0.24637680500745773, -2.0, -2.0, 0.45454545319080353, 0.5072463750839233, -2.0, -2.0, -2.0, 0.6521739065647125, 0.030303032137453556, 0.3333333283662796, -2.0, -2.0, -2.0, 0.27272728085517883, -2.0, -2.0, 0.1818181872367859, 0.3188405781984329, -0.06060606148093939, 0.9736842215061188, -2.0, 0.0, -2.0, 0.159420283511281, -2.0, -2.0, -2.0, 0.4057970941066742, -0.030303032137453556, -2.0, 0.09090909268707037, 0.9736842215061188, -2.0, -2.0, 0.36231884360313416, -2.0, -2.0, -2.0, 0.28985506296157837, 0.260869562625885, -2.0, 0.5151515156030655, -2.0, 0.6969696879386902, -2.0, -2.0, -2.0};
            int[] indices = {0, 1, 0, 0, 2, -2, -2, 2, 2, -2, 1, 2, 2, -2, 0, -2, -2, -2, 0, 0, 0, 2, 2, -2, -2, -2, 2, -2, -2, -2, 2, -2, -2, 1, 0, 1, 0, 2, 1, 2, -2, -2, -2, -2, -2, -2, -2, -2, 0, -2, -2, 0, 0, 0, -2, 2, 0, 1, 1, -2, 2, -2, 2, -2, -2, -2, 2, -2, 1, 1, 1, 2, 1, -2, 1, 0, 1, -2, -2, -2, 0, 1, -2, 1, 1, -2, -2, -2, -2, 1, -2, 1, 0, -2, -2, 0, 1, -2, 1, 2, -2, 1, -2, 1, -2, -2, 1, -2, 1, 2, -2, -2, -2, -2, 2, -2, 0, -2, -2, -2, -2, 0, 1, -2, -2, 0, 2, 1, -2, 1, 0, -2, -2, -2, 1, 1, -2, -2, -2, 1, -2, 1, 2, 1, 2, -2, -2, 1, -2, 1, 2, 1, -2, 0, 1, -2, 1, -2, -2, 1, -2, -2, 1, -2, -2, -2, 1, 1, -2, 1, 2, -2, 1, -2, 0, -2, -2, 1, -2, 1, 2, -2, -2, 2, -2, -2, -2, 1, -2, 1, 1, 2, 0, 1, -2, -2, -2, -2, 0, -2, -2, 1, -2, 1, 2, -2, -2, -2, 2, 1, 1, 0, -2, 2, -2, 1, 1, -2, -2, -2, 1, 2, 0, 1, -2, -2, -2, 2, -2, 0, 1, -2, -2, -2, 1, 1, 1, 0, 2, -2, 1, 0, 1, -2, 1, -2, -2, 1, 2, -2, -2, -2, 2, 1, -2, 0, -2, 2, -2, 1, -2, -2, 1, -2, -2, -2, -2, -2, 2, -2, 0, 1, -2, 1, -2, -2, -2, -2, 1, 1, 1, 2, 1, 1, 0, -2, -2, -2, -2, 2, 2, 1, -2, 0, -2, 1, -2, -2, -2, 1, -2, -2, 2, 0, 2, 1, 2, -2, -2, 2, 1, -2, -2, 1, -2, -2, -2, -2, 0, -2, -2, 0, 2, 2, 2, -2, -2, -2, -2, 1, -2, 0, -2, -2, 2, 1, 0, -2, -2, 1, -2, 1, 1, 1, 0, -2, -2, -2, -2, -2, 0, 1, -2, 1, 0, 1, 2, -2, 1, -2, -2, -2, -2, 1, -2, 0, 1, -2, -2, -2, 1, 1, 2, -2, 1, -2, -2, -2, -2, 1, 2, 1, 1, 2, -2, 1, -2, 1, 2, -2, -2, 1, -2, 2, 2, 1, -2, -2, -2, -2, 2, -2, -2, -2, 1, -2, -2, -2, 0, 1, 2, 1, 1, 1, -2, 1, 2, -2, -2, -2, 2, 2, -2, 1, -2, -2, -2, -2, 1, 2, 1, 2, 1, -2, -2, -2, -2, 1, -2, 0, -2, -2, 0, 1, -2, -2, -2, 2, 0, 1, -2, 1, 2, -2, -2, 2, 1, -2, 1, 2, -2, -2, -2, 1, -2, 1, -2, 1, -2, -2, 1, 1, -2, -2, 1, -2, -2, 1, -2, 2, 1, -2, 1, -2, 1, -2, -2, -2, 2, 1, 2, -2, 1, -2, 1, -2, 1, 0, 0, 1, 0, 0, 1, -2, -2, 1, -2, -2, -2, -2, -2, -2, -2, 1, -2, 2, 1, 0, -2, 1, -2, -2, 0, 1, -2, -2, -2, 1, 0, 1, -2, -2, -2, 0, -2, -2, 0, 1, 0, 2, -2, 1, -2, 1, -2, -2, -2, 1, 0, -2, 0, 2, -2, -2, 1, -2, -2, -2, 1, 1, -2, 0, -2, 0, -2, -2, -2};
            int[][] classes = {{1065, 378}, {1007, 157}, {32, 20}, {30, 13}, {1, 3}, {1, 0}, {0, 3}, {29, 10}, {24, 5}, {0, 1}, {24, 4}, {12, 1}, {6, 1}, {5, 0}, {1, 1}, {1, 0}, {0, 1}, {6, 0}, {12, 3}, {11, 2}, {7, 2}, {5, 1}, {2, 1}, {1, 0}, {1, 1}, {3, 0}, {2, 1}, {1, 0}, {1, 1}, {4, 0}, {1, 1}, {0, 1}, {1, 0}, {5, 5}, {5, 3}, {5, 2}, {3, 2}, {2, 2}, {1, 2}, {1, 1}, {1, 0}, {0, 1}, {0, 1}, {1, 0}, {1, 0}, {2, 0}, {0, 1}, {0, 2}, {2, 7}, {0, 7}, {2, 0}, {975, 137}, {464, 91}, {327, 35}, {0, 1}, {327, 34}, {202, 13}, {89, 1}, {29, 1}, {26, 0}, {3, 1}, {1, 0}, {2, 1}, {1, 1}, {1, 0}, {60, 0}, {113, 12}, {32, 0}, {81, 12}, {81, 11}, {69, 11}, {65, 9}, {16, 5}, {5, 0}, {11, 5}, {1, 3}, {1, 1}, {0, 1}, {1, 0}, {0, 2}, {10, 2}, {4, 2}, {1, 0}, {3, 2}, {2, 2}, {2, 1}, {0, 1}, {1, 0}, {6, 0}, {49, 4}, {8, 0}, {41, 4}, {3, 1}, {3, 0}, {0, 1}, {38, 3}, {25, 3}, {5, 0}, {20, 3}, {8, 2}, {3, 0}, {5, 2}, {2, 1}, {3, 1}, {1, 0}, {2, 1}, {12, 1}, {6, 0}, {6, 1}, {3, 1}, {2, 1}, {1, 0}, {3, 0}, {13, 0}, {4, 2}, {3, 0}, {1, 2}, {1, 0}, {0, 2}, {12, 0}, {0, 1}, {125, 21}, {3, 3}, {0, 3}, {3, 0}, {122, 18}, {39, 2}, {32, 1}, {18, 0}, {14, 1}, {3, 1}, {2, 0}, {1, 1}, {11, 0}, {7, 1}, {2, 1}, {1, 0}, {1, 1}, {5, 0}, {83, 16}, {8, 0}, {75, 16}, {39, 11}, {30, 6}, {4, 2}, {4, 0}, {0, 2}, {26, 4}, {10, 0}, {16, 4}, {12, 4}, {7, 3}, {2, 0}, {5, 3}, {3, 2}, {2, 0}, {1, 2}, {1, 1}, {0, 1}, {2, 1}, {0, 1}, {2, 0}, {5, 1}, {2, 1}, {3, 0}, {4, 0}, {9, 5}, {9, 4}, {1, 0}, {8, 4}, {2, 2}, {1, 0}, {1, 2}, {0, 1}, {1, 1}, {1, 0}, {0, 1}, {6, 2}, {2, 0}, {4, 2}, {3, 1}, {1, 1}, {2, 0}, {1, 1}, {1, 0}, {0, 1}, {0, 1}, {36, 5}, {14, 0}, {22, 5}, {9, 4}, {8, 2}, {4, 2}, {1, 2}, {0, 1}, {1, 1}, {3, 0}, {4, 0}, {1, 2}, {1, 0}, {0, 2}, {13, 1}, {7, 0}, {6, 1}, {1, 1}, {1, 0}, {0, 1}, {5, 0}, {137, 56}, {39, 32}, {35, 32}, {10, 3}, {8, 0}, {2, 3}, {0, 1}, {2, 2}, {1, 2}, {1, 1}, {0, 1}, {1, 0}, {25, 29}, {3, 8}, {2, 2}, {2, 1}, {2, 0}, {0, 1}, {0, 1}, {1, 6}, {0, 4}, {1, 2}, {1, 1}, {1, 0}, {0, 1}, {0, 1}, {22, 21}, {19, 15}, {16, 15}, {16, 13}, {12, 13}, {0, 3}, {12, 10}, {7, 3}, {5, 1}, {3, 0}, {2, 1}, {1, 1}, {1, 0}, {2, 2}, {1, 2}, {0, 1}, {1, 1}, {1, 0}, {5, 7}, {4, 3}, {0, 1}, {4, 2}, {2, 0}, {2, 2}, {0, 1}, {2, 1}, {1, 1}, {1, 0}, {1, 4}, {1, 0}, {0, 4}, {4, 0}, {0, 2}, {3, 0}, {3, 6}, {0, 3}, {3, 3}, {3, 2}, {2, 0}, {1, 2}, {1, 1}, {0, 1}, {0, 1}, {4, 0}, {98, 24}, {31, 15}, {26, 9}, {7, 5}, {2, 3}, {1, 3}, {1, 1}, {1, 0}, {0, 1}, {0, 2}, {1, 0}, {5, 2}, {4, 1}, {3, 1}, {1, 0}, {2, 1}, {1, 0}, {1, 1}, {0, 1}, {1, 0}, {1, 0}, {1, 1}, {1, 0}, {0, 1}, {19, 4}, {17, 3}, {13, 3}, {10, 3}, {5, 1}, {4, 1}, {1, 0}, {5, 2}, {1, 1}, {0, 1}, {1, 0}, {4, 1}, {3, 0}, {1, 1}, {3, 0}, {4, 0}, {2, 1}, {2, 0}, {0, 1}, {5, 6}, {4, 2}, {3, 2}, {3, 1}, {1, 1}, {2, 0}, {0, 1}, {1, 0}, {1, 4}, {0, 3}, {1, 1}, {1, 0}, {0, 1}, {67, 9}, {17, 4}, {1, 1}, {0, 1}, {1, 0}, {16, 3}, {8, 0}, {8, 3}, {4, 3}, {4, 2}, {3, 1}, {2, 0}, {1, 1}, {1, 1}, {0, 1}, {4, 0}, {50, 5}, {41, 3}, {15, 0}, {26, 3}, {5, 2}, {3, 2}, {3, 1}, {2, 0}, {1, 1}, {0, 1}, {1, 0}, {0, 1}, {2, 0}, {21, 1}, {15, 0}, {6, 1}, {2, 1}, {1, 1}, {1, 0}, {4, 0}, {9, 2}, {6, 2}, {6, 1}, {4, 0}, {2, 1}, {1, 0}, {1, 1}, {0, 1}, {3, 0}, {511, 46}, {511, 45}, {509, 43}, {489, 43}, {487, 42}, {18, 0}, {469, 42}, {6, 0}, {463, 42}, {2, 1}, {1, 1}, {1, 0}, {461, 41}, {9, 0}, {452, 41}, {451, 40}, {448, 40}, {447, 40}, {1, 0}, {3, 0}, {1, 1}, {2, 1}, {0, 1}, {2, 0}, {20, 0}, {2, 2}, {2, 0}, {0, 2}, {0, 1}, {58, 221}, {38, 49}, {9, 31}, {5, 7}, {5, 5}, {1, 3}, {0, 1}, {1, 2}, {1, 1}, {0, 1}, {1, 0}, {0, 1}, {4, 2}, {2, 2}, {1, 0}, {1, 2}, {1, 0}, {0, 2}, {2, 0}, {0, 2}, {4, 24}, {2, 21}, {1, 18}, {1, 6}, {1, 1}, {0, 1}, {1, 0}, {0, 5}, {0, 12}, {1, 3}, {0, 2}, {1, 1}, {0, 1}, {1, 0}, {2, 3}, {2, 1}, {2, 0}, {0, 1}, {0, 2}, {29, 18}, {26, 12}, {20, 6}, {4, 0}, {16, 6}, {2, 2}, {0, 2}, {2, 0}, {14, 4}, {12, 2}, {6, 0}, {6, 2}, {1, 2}, {0, 1}, {1, 1}, {5, 0}, {2, 2}, {0, 1}, {2, 1}, {1, 0}, {1, 1}, {0, 1}, {1, 0}, {6, 6}, {1, 4}, {1, 0}, {0, 4}, {5, 2}, {5, 0}, {0, 2}, {3, 6}, {0, 2}, {3, 4}, {3, 2}, {2, 0}, {1, 2}, {0, 1}, {1, 1}, {1, 0}, {0, 1}, {0, 2}, {20, 172}, {16, 65}, {6, 43}, {0, 26}, {6, 17}, {1, 0}, {5, 17}, {0, 6}, {5, 11}, {5, 6}, {5, 3}, {3, 3}, {2, 3}, {2, 2}, {1, 1}, {0, 1}, {1, 0}, {1, 1}, {1, 0}, {0, 1}, {0, 1}, {1, 0}, {2, 0}, {0, 3}, {0, 5}, {10, 22}, {3, 0}, {7, 22}, {5, 7}, {1, 5}, {0, 4}, {1, 1}, {0, 1}, {1, 0}, {4, 2}, {4, 1}, {4, 0}, {0, 1}, {0, 1}, {2, 15}, {1, 14}, {1, 3}, {0, 3}, {1, 0}, {0, 11}, {1, 1}, {0, 1}, {1, 0}, {4, 107}, {3, 30}, {1, 22}, {1, 6}, {0, 4}, {1, 2}, {0, 1}, {1, 1}, {1, 0}, {0, 1}, {0, 16}, {2, 8}, {2, 5}, {0, 2}, {2, 3}, {1, 2}, {1, 1}, {0, 1}, {1, 1}, {0, 1}, {1, 0}, {0, 3}, {1, 77}, {1, 22}, {0, 18}, {1, 4}, {0, 3}, {1, 1}, {1, 0}, {0, 1}, {0, 55}};

            // Prediction:
            DecisionTreeClassifier clf = new DecisionTreeClassifier(lChilds, rChilds, thresholds, indices, classes);
            estimation = clf.predict(features);
            System.out.println(estimation);

        }
    }
}